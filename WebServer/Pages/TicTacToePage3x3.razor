@page "/tictactoe3x3"

@using WebServer.Data
@using Intellectual
@using TicTacToeLib

@inject NavigationManager NavigationManager

<PageTitle>TicTacToe</PageTitle>

<div id="game-screen" class="center">
  <h2 align="center">TicTacToe Game</h2>
  @if (!Game.IsStarted)
  {
        <table class="center">
            <tr>
        <td>
            <button type="button" id="choose-value" @onclick="async () => { Player.Value = TicTacToeValue.X; Bot.Value = TicTacToeValue.O; await Game.Init(LineSize); }">Choose X</button>
        </td>
        <td>
            <button type="button" id="choose-value"  @onclick="async () => { Player.Value = TicTacToeValue.O; Bot.Value = TicTacToeValue.X; await Game.Init(LineSize); }">Choose O</button>
        </td>
    </tr>
    </table>
  }
  else
  {
    <table class="center">
        @for (int i = 0; i < LineSize; i++)
        {
            <tr>
             @for (int j = 0; j < LineSize; j++)
             {
                <td>
                  @if (Game.GetValue(i, j) == TicTacToeValue.No)
                  {
                        int row = i, col = j;
                        <button type="button" class="cell" @onclick="() => Player.MakeMove(row, col)"></button>
                  }
                  else
                  {
                        <button type="button" class="cell">@Game.GetValue(i, j)</button>
                  }
                </td>
             }
            </tr>
        }
  </table>
  <button type="button" id="restart" @onclick=@ReloadPage>Restart</button> 
  }
</div>

@code {
    [Inject] Game Game { get; set; }
    [Inject] Player Player { get; set; }
    [Inject] Bot Bot { get; set; }
    const int LineSize = 3;

    protected override void OnInitialized()
    {
        Game.BotMove += Bot.MakeMove;
        Bot.Game = Game;
        Player.Game = Game;
    }

    private void ReloadPage()
    {
        NavigationManager.NavigateTo(NavigationManager.Uri, true);
    }

}